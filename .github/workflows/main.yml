name: CI/CD Pipeline for Sentinel Wireframe

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: self-hosted
    env:
      NPM_CONFIG_PRODUCTION: "false"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies (ignore scripts)
        run: |
          npm install --legacy-peer-deps --ignore-scripts
          npm run prepare || true

      - name: Build project
        run: npm run build
    
  sca_check:
    name: Software Composition Analysis (SCA)
    runs-on: self-hosted
    env:
      NPM_CONFIG_PRODUCTION: "false"
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies (ignore scripts)
        run: |
          npm install --legacy-peer-deps --ignore-scripts
          npm run prepare || true

      - name: Run npm Audit for SCA
        run: npm audit --audit-level=moderate
        continue-on-error: true
  
  build_deploy_uat:
    name: Build & Deploy to UAT Kubernetes Cluster
    runs-on: self-hosted
    needs: sca_check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: docker build -t sentinel-wireframe:latest -f Dockerfile .

      - name: Push Docker Image
        if: env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_PASSWORD != ''
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker tag sentinel-wireframe:latest $DOCKERHUB_USERNAME/sentinel-wireframe:latest
          docker push $DOCKERHUB_USERNAME/sentinel-wireframe:latest
